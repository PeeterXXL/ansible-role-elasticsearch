---
# http://docs.ansible.com/ansible/latest/set_fact_module.html
- name: Merge elasticsearch_default and elasticsearch variables
  set_fact:
    elasticsearch_combined: "{{ elasticsearch_defaults | combine(elasticsearch, recursive=True) }}"

# https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html
# http://docs.ansible.com/ansible/latest/apt_key_module.html
- name: Add repository key
  apt_key:
    url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
    id: "46095ACC8548582C1A2699A9D27D666CD88E42B4"
    state: present

# https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html
# http://docs.ansible.com/ansible/latest/apt_repository_module.html
- name: Add Elastic 5.x repo (if choosing the 5.x version)
  apt_repository:
    repo: 'deb https://artifacts.elastic.co/packages/5.x/apt stable main'
    state: present
  when: "elasticsearch_combined.version == '5.x'"
  
  # https://www.elastic.co/guide/en/elasticsearch/reference/2.4/setup-repositories.html
  # https://packages.elastic.co/elasticsearch/2.x/debian

- name: Update apt cache
  apt: update_cache=yes
  when: (elasticsearch_combined.version == '5.x')

- name: Install from repo (if choosing the 5.x version)
  apt:
    name: elasticsearch
    state: installed
  when: (elasticsearch_combined.version == '5.x')

- name: Get the platform (i386 or amd64) of the virtual machine
  command: dpkg --print-architecture
  register: print_architecture

- name: And set the actual platform value as a variable
  set_fact:
    platform: "{{ print_architecture.stdout }}"

- name: Download deb (if choosing a specific version)
  get_url:
    url={{ elastic_url }}/downloads/elasticsearch/elasticsearch-{{ elasticsearch_combined.version }}.deb
    dest=/opt/elasticsearch.deb
  when: (elasticsearch_combined.version != '5.x')

- name: Install from deb (if choosing a specific version)
  apt: deb=/opt/elasticsearch.deb
  when: (elasticsearch_combined.version != '5.x')

# http://docs.ansible.com/ansible/latest/service_module.html
- name: Make sure Elasticsearch autostarts
  service:
    name: elasticsearch
    enabled: yes

- name: Change Elasticsearch's memory usage to 512MB
  lineinfile:
    dest: /etc/elasticsearch/jvm.options
    regexp: "^-Xms"
    line: "-Xms512m"
    state: present
- lineinfile:
    dest: /etc/elasticsearch/jvm.options
    regexp: "^-Xmx"
    line: "-Xmx512m"
    state: present

- name: Set the ulimits
  shell: ulimit -n 65536
- shell: ulimit -l unlimited

# http://docs.ansible.com/ansible/latest/template_module.html
- name: Copy config file
  template:
    src: "elasticsearch.yml"
    dest: "{{ elasticsearch_combined.config_include_dir }}/elasticsearch.yml"
    owner: root
    group: root
    mode: 0644
  when: "elasticsearch_combined.install_only != 'true'"

- name: Restart Elasticsearch
  service:
    name: "{{ elasticsearch_combined.daemon }}"
    state: restarted
    sleep: 15

- name: Wait for Elasticsearch to become available
  wait_for:
    port: 9200
    delay: 5

# - name: Download the ingest-geoip plugin
  # get_url:
    # url: "{{ elastic_url }}/downloads/elasticsearch-plugins/ingest-geoip/ingest-geoip-{{ elastic_version }}.zip"
    # dest: /opt/ingest-geoip.zip
# 
# - name: Download the ingest-user-agent plugin
  # get_url:
    # url: "{{ elastic_url }}/downloads/elasticsearch-plugins/ingest-user-agent/ingest-user-agent-{{ elastic_version }}.zip"
    # dest: /opt/ingest-user-agent.zip
# 
# 
# - name: Add the ingest-geoip plugin to Elasticsearch
  # command: /usr/share/elasticsearch/bin/elasticsearch-plugin install file:///opt/ingest-geoip.zip --batch
# 
# - name: Add the ingest-user-agent plugin to Elasticsearch
  # command: /usr/share/elasticsearch/bin/elasticsearch-plugin install file:///opt/ingest-user-agent.zip --batch
